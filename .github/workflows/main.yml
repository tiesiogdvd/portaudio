name: Build PortAudio Static Libraries (MinGW)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows-mingw:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86_64, i686]
        
    steps:
    - name: Checkout PortAudio
      uses: actions/checkout@v4
      with:
        repository: PortAudio/portaudio
        ref: master
        
    - name: Setup MinGW-w64
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-${{ matrix.arch }}-gcc
          mingw-w64-${{ matrix.arch }}-cmake
          mingw-w64-${{ matrix.arch }}-ninja
          mingw-w64-${{ matrix.arch }}-pkg-config
          make
          
    - name: Create build directory
      shell: msys2 {0}
      run: mkdir build
      
    - name: Configure CMake
      shell: msys2 {0}
      working-directory: build
      run: |
        cmake .. \
          -G "MinGW Makefiles" \
          -DCMAKE_BUILD_TYPE=Release \
          -DPA_BUILD_SHARED_LIBS=OFF \
          -DPA_BUILD_TESTS=OFF \
          -DPA_BUILD_EXAMPLES=OFF \
          -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded \
          -DPA_USE_ASIO=ON \
          -DPA_USE_DS=ON \
          -DPA_USE_WMME=ON \
          -DPA_USE_WASAPI=ON \
          -DPA_USE_WDMKS=ON \
          -DCMAKE_INSTALL_PREFIX=install
        
    - name: Build
      shell: msys2 {0}
      working-directory: build
      run: |
        make -j$(nproc)
        make install
        
    - name: Package artifacts
      shell: msys2 {0}
      working-directory: build
      run: |
        mkdir ../portaudio-windows-mingw-${{ matrix.arch }}
        cp -r install/include ../portaudio-windows-mingw-${{ matrix.arch }}/
        cp -r install/lib ../portaudio-windows-mingw-${{ matrix.arch }}/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: portaudio-windows-mingw-${{ matrix.arch }}
        path: portaudio-windows-mingw-${{ matrix.arch }}/

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
        
    steps:
    - name: Checkout PortAudio
      uses: actions/checkout@v4
      with:
        repository: PortAudio/portaudio
        ref: master
        
    - name: Install dependencies
      run: |
        brew install cmake
        
    - name: Create build directory
      run: mkdir build
      
    - name: Configure CMake
      working-directory: build
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DPA_BUILD_SHARED_LIBS=OFF \
          -DPA_BUILD_TESTS=OFF \
          -DPA_BUILD_EXAMPLES=OFF \
          -DPA_USE_COREAUDIO=ON \
          -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} \
          -DCMAKE_INSTALL_PREFIX=install
          
    - name: Build
      working-directory: build
      run: |
        make -j$(sysctl -n hw.ncpu)
        make install
        
    - name: Package artifacts
      working-directory: build
      run: |
        mkdir ../portaudio-macos-${{ matrix.arch }}
        cp -r install/include ../portaudio-macos-${{ matrix.arch }}/
        cp -r install/lib ../portaudio-macos-${{ matrix.arch }}/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: portaudio-macos-${{ matrix.arch }}
        path: portaudio-macos-${{ matrix.arch }}/

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        
    steps:
    - name: Checkout PortAudio
      uses: actions/checkout@v4
      with:
        repository: PortAudio/portaudio
        ref: master
        
    - name: Install dependencies (x86_64)
      if: matrix.arch == 'x86_64'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libasound2-dev \
          libjack-jackd2-dev \
          portaudio19-dev
          
    - name: Install dependencies (aarch64)
      if: matrix.arch == 'aarch64'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu
        # Cross-compile dependencies
        sudo dpkg --add-architecture arm64
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev:arm64 \
          libjack-jackd2-dev:arm64
          
    - name: Create build directory
      run: mkdir build
      
    - name: Configure CMake (x86_64)
      if: matrix.arch == 'x86_64'
      working-directory: build
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DPA_BUILD_SHARED_LIBS=OFF \
          -DPA_BUILD_TESTS=OFF \
          -DPA_BUILD_EXAMPLES=OFF \
          -DPA_USE_ALSA=ON \
          -DPA_USE_JACK=ON \
          -DCMAKE_INSTALL_PREFIX=install
          
    - name: Configure CMake (aarch64)
      if: matrix.arch == 'aarch64'
      working-directory: build
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DPA_BUILD_SHARED_LIBS=OFF \
          -DPA_BUILD_TESTS=OFF \
          -DPA_BUILD_EXAMPLES=OFF \
          -DPA_USE_ALSA=ON \
          -DPA_USE_JACK=ON \
          -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
          -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
          -DCMAKE_SYSTEM_NAME=Linux \
          -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
          -DCMAKE_INSTALL_PREFIX=install
          
    - name: Build
      working-directory: build
      run: |
        make -j$(nproc)
        make install
        
    - name: Package artifacts
      working-directory: build
      run: |
        mkdir ../portaudio-linux-${{ matrix.arch }}
        cp -r install/include ../portaudio-linux-${{ matrix.arch }}/
        cp -r install/lib ../portaudio-linux-${{ matrix.arch }}/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: portaudio-linux-${{ matrix.arch }}
        path: portaudio-linux-${{ matrix.arch }}/

  create-release:
    needs: [build-windows-mingw, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: Create release archives
      run: |
        cd artifacts
        for dir in */; do
          tar -czf "${dir%/}.tar.gz" "$dir"
        done
        ls -la *.tar.gz
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: portaudio-static-mingw-${{ github.run_number }}
        name: PortAudio Static Libraries (MinGW) Build ${{ github.run_number }}
        body: |
          Static libraries for PortAudio built with MinGW from latest master.
          
          **Included platforms:**
          - Windows MinGW (x86_64, i686) - produces .a files
          - macOS (x86_64, arm64)  
          - Linux (x86_64, aarch64)
          
          **Build configuration:**
          - Static libraries only
          - Release configuration
          - Platform-optimized audio backends enabled
          - Windows builds use MinGW-w64 toolchain
        files: artifacts/*.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
