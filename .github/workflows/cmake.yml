name: Build PortAudio Static Libraries

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu GCC
            artifact_name: ubuntu-gcc
            os: ubuntu-latest
            vcpkg_triplet: x64-linux
            cmake_generator: "Unix Makefiles"
            cmake_options:
              -DPA_USE_OSS=ON
              -DPA_BUILD_SHARED_LIBS=OFF
          - name: Ubuntu MinGW
            artifact_name: ubuntu-mingw
            os: ubuntu-latest
            asio_sdk_cache_path: asiosdk.zip
            dependencies_extras: mingw-w64
            vcpkg_triplet: x64-mingw-static
            cmake_generator: "Unix Makefiles"
            cmake_options:
              -DPA_USE_ASIO=ON
              -DPA_USE_JACK=OFF
              -DASIO_SDK_ZIP_PATH=asiosdk.zip
              -DPA_BUILD_SHARED_LIBS=OFF
          - name: Windows MSVC
            artifact_name: windows-msvc
            os: windows-latest
            vcpkg_triplet: x64-windows-static
            cmake_generator: "Visual Studio 17 2022"
            asio_sdk_cache_path: "asiosdk.zip"
            cmake_options:
              -DPA_USE_ASIO=ON
              -DPA_USE_JACK=OFF
              -DASIO_SDK_ZIP_PATH="asiosdk.zip"
              -DPA_BUILD_SHARED_LIBS=OFF
              -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
          - name: Windows MinGW
            artifact_name: windows-mingw
            os: windows-latest
            vcpkg_triplet: x64-mingw-static
            cmake_generator: "MinGW Makefiles"
            cmake_options:
              -DPA_USE_WASAPI=ON
              -DPA_USE_ASIO=OFF
              -DPA_USE_JACK=OFF
              -DPA_USE_WMME=OFF
              -DPA_USE_DS=OFF
              -DPA_USE_WDMKS=OFF
              -DPA_BUILD_SHARED_LIBS=OFF
              -DCMAKE_C_FLAGS="-D__USE_MINGW_ANSI_STDIO=1 -static-libgcc"
              -DCMAKE_CXX_FLAGS="-D__USE_MINGW_ANSI_STDIO=1 -static-libgcc -static-libstdc++"
          - name: macOS x86_64
            artifact_name: macos-x86_64
            os: macOS-latest
            vcpkg_triplet: x64-osx
            cmake_generator: "Unix Makefiles"
            cmake_options:
              -DCMAKE_FRAMEWORK=OFF
              -DCMAKE_OSX_ARCHITECTURES=x86_64
              -DPA_BUILD_SHARED_LIBS=OFF
          - name: macOS arm64
            artifact_name: macos-arm64
            os: macOS-latest
            vcpkg_triplet: arm64-osx
            cmake_generator: "Unix Makefiles"
            cmake_options:
              -DCMAKE_FRAMEWORK=OFF
              -DCMAKE_OSX_ARCHITECTURES=arm64
              -DPA_BUILD_SHARED_LIBS=OFF

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    env:
      cmake_build_type: Release
      
    steps:
    - name: Checkout PortAudio Git repository
      uses: actions/checkout@v4
      
    - name: "Install dependencies [Ubuntu]"
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev libpulse-dev libsndio-dev ${{ matrix.dependencies_extras }}
      if: matrix.os == 'ubuntu-latest'
      
    - name: "Set up ASIO SDK cache [Windows/MinGW]"
      uses: actions/cache@v4
      if: matrix.asio_sdk_cache_path != null
      with:
        path: ${{ matrix.asio_sdk_cache_path }}
        key: ${{ hashFiles('.github/asiosdk-version.txt') }}
               
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v7
      if: ${{ matrix.vcpkg_triplet }} != null
      with:
        vcpkgDirectory: ${{ github.workspace }}/../vcpkg
        vcpkgTriplet: ${{ matrix.vcpkg_triplet }}
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        additionalCachedPaths: build/vcpkg_installed
        vcpkgGitCommitId: ca9ac0ba65965937fb66783c4f726c2c755ad9d9
        setupOnly: true
        
    - name: Configure PortAudio library
      run: cmake
           -G "${{ matrix.cmake_generator }}"
           ${{ matrix.cmake_options }}
           -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/../vcpkg/scripts/buildsystems/vcpkg.cmake
           -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/../out
           -DCMAKE_BUILD_TYPE=${{ env.cmake_build_type }}
           -DVCPKG_TARGET_TRIPLET=${{ matrix.vcpkg_triplet }}
           -DPA_USE_SKELETON=OFF
           -DPA_BUILD_TESTS=OFF
           -DPA_BUILD_EXAMPLES=OFF
           -DPA_WARNINGS_ARE_ERRORS=OFF
           -S .
           -B ${{ github.workspace }}/build
           
    - name: Build PortAudio library
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.cmake_build_type }} --parallel 4
      
    - name: Install PortAudio library
      run: cmake --install ${{ github.workspace }}/build --config ${{ env.cmake_build_type }}

    - name: Package artifacts
      shell: bash
      run: |
        # Work in the install directory and package into workspace
        cd "${{ github.workspace }}/../out"
        
        # Create the package structure
        mkdir -p "portaudio-${{ matrix.artifact_name }}"
        
        # Copy files
        if [ -d "include" ]; then
          cp -r include "portaudio-${{ matrix.artifact_name }}/"
        fi
        if [ -d "lib" ]; then
          cp -r lib "portaudio-${{ matrix.artifact_name }}/"
        fi
        if [ -d "share" ]; then
          cp -r share "portaudio-${{ matrix.artifact_name }}/"
        fi
        
        # Create archive
        tar -czf "portaudio-${{ matrix.artifact_name }}.tar.gz" "portaudio-${{ matrix.artifact_name }}"
        
        # Move to workspace to avoid relative path issues
        mv "portaudio-${{ matrix.artifact_name }}.tar.gz" "${{ github.workspace }}/"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: portaudio-${{ matrix.artifact_name }}
        path: ${{ github.workspace }}/portaudio-${{ matrix.artifact_name }}.tar.gz
        retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: portaudio-static-${{ github.run_number }}
        name: PortAudio Static Libraries Build ${{ github.run_number }}
        body: |
          Static libraries for PortAudio built from latest source.
          
          **Included builds:**
          - **ubuntu-gcc**: Ubuntu with GCC (`.a` files)
          - **ubuntu-mingw**: Cross-compiled Windows with MinGW (`.a` files)
          - **windows-msvc**: Windows with MSVC (`.lib` files)
          - **windows-mingw**: Windows with MinGW (`.a` files)
          - **macos-x86_64**: macOS Intel (`.a` files)
          - **macos-arm64**: macOS Apple Silicon (`.a` files)
        files: artifacts/*/*.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
